{"version":3,"sources":["hoc/withAuthRedirect.js","components/content/dialogs/Dialogs.module.css","components/content/dialogs/people/People.module.css","components/content/dialogs/dialog/Dialog.module.css","components/content/dialogs/people/People.jsx","components/content/dialogs/dialog/Dialog.jsx","components/content/dialogs/Dialogs.jsx","components/content/dialogs/DialogsContainer.jsx"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","auth","isAuth","to","React","connect","state","module","exports","Person","className","classes","person","id","activeClassName","active","personName","People","wrapper","people","map","pers","name","Message","message","Dialog","dialogs","d","Dialogs","maxLength500","maxLengthCreator","MessageAreaForm","onSubmit","handleSubmit","textAreaWrap","Field","placeholder","validate","component","Textarea","buttonWrap","button","reduxForm","form","messagesPage","newPostWrap","formData","addNewMessage","DialogsContainer","compose"],"mappings":"4NAIaA,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKC,MAAMC,KAAKC,OACd,cAACL,EAAD,eAAeE,KAAKC,QADS,cAAC,IAAD,CAAUG,GAAG,eAHd,GACXC,IAAMP,WAUtC,OAAOQ,aAJe,SAACC,GAAD,MAAY,CAC9BL,KAAMK,EAAML,QAGTI,CAAyBP,K,oBCdpCS,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,aAAe,8BAA8B,WAAa,4BAA4B,OAAS,0B,oBCA/LD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,uBAAuB,OAAS,yB,oBCA7FD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,QAAU,0B,+HCGxDC,EAAS,SAACT,GACZ,OACI,qBAAKU,UAAWC,IAAQC,OAAxB,SACI,cAAC,IAAD,CAAST,GAAI,YAAYH,EAAMa,GAAIC,gBAAiBH,IAAQI,OAA5D,SAAqEf,EAAMgB,gBAcxEC,EATA,SAACjB,GAEZ,OACI,qBAAKU,UAAWC,IAAQO,QAAxB,SACKlB,EAAMmB,OAAOC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAQL,WAAYK,EAAKC,KAAMT,GAAIQ,EAAKR,W,kBCbxEU,EAAU,SAACvB,GACb,OACI,qBAAKU,UAAWC,IAAQa,QAAxB,SACKxB,EAAMwB,WAaJC,EARA,SAACzB,GACZ,OACI,qBAAKU,UAAWC,IAAQO,QAAxB,SACKlB,EAAM0B,QAAQN,KAAI,SAAAO,GAAC,OAAI,cAAC,EAAD,CAASH,QAASG,EAAEH,gB,gBCiCzCI,EAvCC,SAAC5B,GAEb,IAIM6B,EAAeC,YAAiB,KAGlCC,EAAkB,SAAC/B,GACnB,OACI,uBAAMgC,SAAUhC,EAAMiC,aAAtB,UACI,qBAAKvB,UAAWC,IAAQuB,aAAxB,SACI,cAACC,EAAA,EAAD,CAAOb,KAAK,UAAUc,YAAY,oBAC3BC,SAAU,CAACR,GACXS,UAAWC,QAEtB,qBAAK7B,UAAWC,IAAQ6B,WAAxB,SACI,wBAAQ9B,UAAWC,IAAQ8B,OAA3B,0BAQhB,OAFAV,EAAkBW,YAAU,CAACC,KAAM,cAAjBD,CAAgCX,GAG9C,gCACI,sBAAKrB,UAAWC,IAAQO,QAAxB,UACI,cAAC,EAAD,CAAQC,OAAQnB,EAAM4C,aAAazB,SACnC,cAAC,EAAD,CAAQO,QAAS1B,EAAM4C,aAAalB,aAExC,qBAAKhB,UAAWC,IAAQkC,YAAxB,SACI,cAACd,EAAD,CAAiBC,SA/Bd,SAACc,GACZ9C,EAAM+C,cAAcD,Y,yBCGtBE,EAAmBC,YACrB5C,aARkB,SAACC,GACnB,MAAO,CACHsC,aAActC,EAAMsC,gBAMC,CAACG,oBAC1BnD,IAFqBqD,CAGvBrB,GAEaoB","file":"static/js/4.bf85865c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.auth.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let mapStateToProps = (state) => ({\r\n        auth: state.auth\r\n    })\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__tTE_q\",\"newPostWrap\":\"Dialogs_newPostWrap__2Rvrg\",\"textAreaWrap\":\"Dialogs_textAreaWrap__t1JXS\",\"buttonWrap\":\"Dialogs_buttonWrap__3HcMe\",\"button\":\"Dialogs_button__2COkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"People_wrapper__wticB\",\"person\":\"People_person__AXeBr\",\"active\":\"People_active__1v5LL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialog_wrapper__1G3Dk\",\"message\":\"Dialog_message__30dEg\"};","import React from 'react';\r\nimport classes from './People.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Person = (props) => {\r\n    return (\r\n        <div className={classes.person}>\r\n            <NavLink to={'/dialogs/'+props.id} activeClassName={classes.active}>{props.personName}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst People = (props) => {\r\n\r\n    return(\r\n        <div className={classes.wrapper}>\r\n            {props.people.map(pers => <Person personName={pers.name} id={pers.id}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default People;","import React from 'react';\r\nimport classes from './Dialog.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            {props.dialogs.map(d => <Message message={d.message}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport classes from './Dialogs.module.css'\r\nimport People from \"./people/People\";\r\nimport Dialog from \"./dialog/Dialog\";\r\nimport {maxLengthCreator, } from \"../../../utils/validators/validator\";\r\nimport {Textarea} from \"../../common/formsControl/FormsControl\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let onSubmit = (formData) => {\r\n        props.addNewMessage(formData)\r\n    }\r\n\r\n    const maxLength500 = maxLengthCreator(500)\r\n\r\n\r\n    let MessageAreaForm = (props) => {\r\n        return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div className={classes.textAreaWrap}>\r\n                    <Field name='message' placeholder='write new message'\r\n                           validate={[maxLength500]}\r\n                           component={Textarea}/>\r\n                </div>\r\n                <div className={classes.buttonWrap}>\r\n                    <button className={classes.button}>Public</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    MessageAreaForm = reduxForm({form: 'newMessage'})(MessageAreaForm)\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.wrapper}>\r\n                <People people={props.messagesPage.people}/>\r\n                <Dialog dialogs={props.messagesPage.dialogs}/>\r\n            </div>\r\n            <div className={classes.newPostWrap}>\r\n                <MessageAreaForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport {addNewMessage} from \"../../../redux/messagesPage-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\n\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps, {addNewMessage}),\r\n    withAuthRedirect,\r\n)(Dialogs)\r\n\r\nexport default DialogsContainer;\r\n"],"sourceRoot":""}